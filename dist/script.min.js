"use strict";function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(a,b){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a)){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{d||null==h["return"]||h["return"]()}finally{if(e)throw f}}return c}}function _arrayWithHoles(a){if(Array.isArray(a))return a}var educationUrl="https://cdn.freecodecamp.org/testable-projects-fcc/data/choropleth_map/for_user_education.json",geoUrl="https://cdn.freecodecamp.org/testable-projects-fcc/data/choropleth_map/counties.json";document.addEventListener("DOMContentLoaded",function(){Promise.all([d3.json(educationUrl),d3.json(geoUrl)]).then(setData)});var h=600,w=960;d3.select(".container").append("svg").attr("width",960).attr("height",600);/**
 * Api Education object from FCC
 * @typedef {Object} Education
 * @property {String} area_name         - County Name
 * @property {Number} bachelorsOrHigher - Percentage of adults age 25 and older with a bachelor's degree or higher
 * @property {Number} fips              - county Id
 * @property {String} state             - State code (two letter)
 */ /**
 *
 * @param {[Education]} educationData
 * @param {UsAtlas} topology
 */function setData(a){var b=_slicedToArray(a,2),c=b[0],d=b[1],e=d3.geoPath(),f=c.reduce(function(a,b){var c=Math.max,d=Math.min;return a[b.fips]=b,a.min=d(b.bachelorsOrHigher,a.min),a.max=c(b.bachelorsOrHigher,a.max),a},{min:100,max:0}),g=topojson.feature(d,d.objects.counties),h=d3.schemeGreens[8],i=d3.scaleThreshold().domain(d3.range(f.min,f.max,9)).range(h),j=d3.select("#tooltip");d3.select("svg").call(function(a){//
// svg.selectAll('path2')
//     .data(states.features)
//     .enter()
//     .append('path')
//     .attr("d", path)
//     .attr('class', "state");
a.selectAll("path").data(g.features).enter().append("path").attr("d",e).attr("data-fips",function(a){return a.id}).attr("data-education",function(a){return f[a.id].bachelorsOrHigher}).attr("class","county").style("fill",function(a){return i(f[a.id].bachelorsOrHigher)}).on("mouseover",function(a){/**
                 * @type {Education}
                 */var b=f[a.id],c=d3.event,d=c.pageX,e=c.pageY;j.style("display","inline-block"),j.style("left","".concat(d,"px")),j.html("".concat(b.area_name,", ").concat(b.state,": ").concat(b.bachelorsOrHigher,"%")),j.style("top","".concat(e,"px")),j.attr("data-education",b.bachelorsOrHigher)}).on("mouseout",function(){j.style("display","none")}),a.append("path").attr("class","state").attr("d",e(topojson.mesh(d,d.objects.states,function(c,a){return c!==a}))),a.append("g").attr("id","legend").attr("transform","translate(".concat(600,",",30,")")).call(function(a){var b=10,c=f.min,d=f.max,e=(d-c)/h.length,g=d3.range(c,d,e).map(function(a){return a});console.log(g);var j=d3.scaleLinear().domain([c,d]).range([0,250]),k=d3.axisBottom(j).tickSizeOuter(0).tickFormat(d3.format(".1f")).tickValues(g.slice(1));a.selectAll("rect").data(g).enter().append("rect").style("fill",function(a){return i(a+.1)}).attr("width",function(a,b){return(j(g[b+1])||250)-j(a)}).attr("height",b).attr("x",function(a){return j(a)}).attr("y",0),a.append("g").attr("transform","translate(-0.5,".concat(b,")")).call(k)})})}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,